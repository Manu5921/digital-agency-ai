/**
 * D√âMO PHOTO ENGINE 3.0 UNIVERSAL
 * Showcase des capacit√©s avec vrais exemples m√©tiers
 */

import { UniversalPhotoEngine } from './universal-photo-engine.js';

class UniversalPhotoEngineDemo {
    constructor() {
        this.engine = new UniversalPhotoEngine();
    }

    /**
     * D√âMONSTRATION COMPL√àTE AVEC 3 SECTEURS
     */
    async runUniversalDemo() {
        console.log('üé≠ D√âMO PHOTO ENGINE 3.0 UNIVERSAL');
        console.log('='.repeat(50));
        console.log('üéØ D√©monstration capacit√©s multi-secteurs');
        console.log('üì∏ Sources gratuites: Unsplash + Pexels + Pixabay');
        console.log('ü§ñ Intelligence artificielle + Curation automatique');
        console.log('');

        // 3 secteurs repr√©sentatifs
        const demoBusinesses = [
            {
                name: "PlombiPro Services",
                sector: "plomberie", 
                description: "Entreprise de plomberie √† Paris, d√©pannage urgence 24h/7j, installation sanitaire",
                owner: "Michel Dupont",
                location: "Paris 15√®me",
                expectedResult: "Photos techniques + couleurs professionnelles bleu/orange"
            },
            {
                name: "Cabinet S√©r√©nit√©",
                sector: "sophrologie",
                description: "Cabinet de sophrologie et relaxation, gestion du stress, m√©ditation",
                owner: "Dr. Marie Dubois", 
                location: "Lyon Centre",
                expectedResult: "Photos apaisantes + couleurs th√©rapeutiques teal/beige"
            },
            {
                name: "Le Bistrot Gourmand",
                sector: "restaurant",
                description: "Restaurant traditionnel fran√ßais, cuisine du terroir, ambiance chaleureuse",
                owner: "Chef Antoine Martin",
                location: "Marseille Vieux-Port", 
                expectedResult: "Photos gastronomiques + couleurs app√©tissantes rouge/dor√©"
            }
        ];

        const results = [];

        for (let i = 0; i < demoBusinesses.length; i++) {
            const business = demoBusinesses[i];
            console.log(`\nüè¢ D√âMO ${i + 1}/3: ${business.name}`);
            console.log('‚îÄ'.repeat(40));
            
            const result = await this.demonstrateBusiness(business);
            results.push(result);
        }

        // Showcase comparatif final
        this.generateComparativeShowcase(results);
        
        return results;
    }

    /**
     * D√âMONSTRATION BUSINESS SP√âCIFIQUE
     */
    async demonstrateBusiness(business) {
        console.log('üìã Secteur:', business.sector);
        console.log('üë§ Propri√©taire:', business.owner);
        console.log('üìç Localisation:', business.location);
        console.log('üéØ Attendu:', business.expectedResult);
        console.log('');

        const startTime = Date.now();

        try {
            // G√©n√©ration avec Photo Engine 3.0
            const result = await this.engine.generateUniversalPhotos({
                name: business.name,
                sector: business.sector,
                description: business.description,
                owner: business.owner,
                location: business.location
            });

            const processingTime = Date.now() - startTime;

            if (result.success) {
                this.displaySuccessResult(result, processingTime);
                return { business, result, success: true, processingTime };
            } else {
                this.displayErrorResult(result, processingTime);
                return { business, result, success: false, processingTime };
            }

        } catch (error) {
            console.error('‚ùå Erreur g√©n√©ration:', error.message);
            return { business, error, success: false, processingTime: Date.now() - startTime };
        }
    }

    /**
     * AFFICHAGE R√âSULTAT SUCC√àS
     */
    displaySuccessResult(result, processingTime) {
        console.log('‚úÖ G√âN√âRATION R√âUSSIE');
        console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ');
        
        // Classification
        console.log('üß† CLASSIFICATION INTELLIGENTE:');
        console.log(`   üìä Secteur d√©tect√©: ${result.profile.sector}`);
        console.log(`   üìà Confiance: ${(result.profile.confidence * 100).toFixed(1)}%`);
        console.log(`   üè∑Ô∏è  Cat√©gorie: ${result.profile.category}`);
        console.log(`   üé≠ Mood: ${result.profile.mood}`);
        console.log('');

        // Palette couleurs
        console.log('üé® PALETTE COULEURS OPTIMIS√âE:');
        Object.entries(result.profile.colors).forEach(([role, color]) => {
            console.log(`   ${this.getColorEmoji(color)} ${role}: ${color}`);
        });
        console.log('');

        // Photos s√©lectionn√©es
        console.log('üì∏ PHOTOS PREMIUM S√âLECTIONN√âES:');
        for (const [section, photos] of Object.entries(result.photos.photos)) {
            console.log(`   üìÅ ${section}: ${photos.length} photos`);
            photos.forEach((photo, i) => {
                const source = this.getSourceEmoji(photo.source);
                console.log(`      ${source} ${photo.alt.substring(0, 50)}...`);
            });
        }
        console.log('');

        // M√©triques performance
        console.log('üìä M√âTRIQUES PERFORMANCE:');
        console.log(`   ‚ö° Temps g√©n√©ration: ${processingTime}ms`);
        console.log(`   üì∏ Total photos: ${result.metrics.totalPhotos}`);
        console.log(`   ‚≠ê Score qualit√©: ${result.metrics.qualityScore.toFixed(1)}/10`);
        console.log(`   üéØ Score coh√©rence: ${result.metrics.consistencyScore.toFixed(1)}/10`);
        console.log(`   üìö Sources: ${result.metrics.sources.join(', ')}`);
        console.log('');

        // Optimisations appliqu√©es
        console.log('‚ö° OPTIMISATIONS APPLIQU√âES:');
        console.log('   ‚úÖ Format WebP + AVIF');
        console.log('   ‚úÖ Responsive breakpoints');
        console.log('   ‚úÖ Lazy loading');
        console.log('   ‚úÖ Coh√©rence visuelle');
        console.log('   ‚úÖ Curation qualit√© automatique');
    }

    /**
     * AFFICHAGE R√âSULTAT ERREUR
     */
    displayErrorResult(result, processingTime) {
        console.log('‚ùå G√âN√âRATION √âCHOU√âE');
        console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ');
        console.log('‚è±Ô∏è  Temps:', processingTime + 'ms');
        if (result.message) {
            console.log('üí¨ Message:', result.message);
        }
        if (result.fallback) {
            console.log('üîÑ Fallback activ√©');
            console.log('üì∏ Photos g√©n√©riques utilis√©es');
        }
    }

    /**
     * SHOWCASE COMPARATIF FINAL
     */
    generateComparativeShowcase(results) {
        console.log('\n' + '='.repeat(60));
        console.log('üèÜ SHOWCASE COMPARATIF - PHOTO ENGINE 3.0');
        console.log('='.repeat(60));

        console.log('\nüìä R√âSUM√â PAR SECTEUR:');
        console.log('‚îÄ'.repeat(25));

        results.forEach((demo, i) => {
            const { business, result, success, processingTime } = demo;
            
            console.log(`\n${i + 1}. ${business.name.toUpperCase()} (${business.sector})`);
            console.log('   ' + '‚îÄ'.repeat(35));
            
            if (success && result.success) {
                console.log(`   ‚úÖ Statut: SUCC√àS`);
                console.log(`   üéØ Classification: ${result.profile.sector}`);
                console.log(`   üì∏ Photos: ${result.metrics.totalPhotos}`);
                console.log(`   ‚≠ê Qualit√©: ${result.metrics.qualityScore.toFixed(1)}/10`);
                console.log(`   ‚è±Ô∏è  Temps: ${processingTime}ms`);
                console.log(`   üé® Primaire: ${result.profile.colors.primary}`);
                console.log(`   üé≠ Style: ${result.profile.style}`);
            } else {
                console.log(`   ‚ùå Statut: √âCHEC`);
                console.log(`   ‚è±Ô∏è  Temps: ${processingTime}ms`);
                if (result?.message) console.log(`   üí¨ Raison: ${result.message}`);
            }
        });

        // Statistiques globales
        const successfulResults = results.filter(r => r.success && r.result.success);
        const successRate = successfulResults.length / results.length;
        const avgTime = results.reduce((sum, r) => sum + r.processingTime, 0) / results.length;
        const avgQuality = successfulResults.length > 0 
            ? successfulResults.reduce((sum, r) => sum + r.result.metrics.qualityScore, 0) / successfulResults.length
            : 0;

        console.log('\nüèÜ PERFORMANCE GLOBALE:');
        console.log('‚îÄ'.repeat(22));
        console.log(`‚úÖ Taux succ√®s: ${(successRate * 100).toFixed(1)}%`);
        console.log(`‚è±Ô∏è  Temps moyen: ${Math.round(avgTime)}ms`);
        console.log(`‚≠ê Qualit√© moyenne: ${avgQuality.toFixed(1)}/10`);
        console.log(`üéØ Grade: ${this.getPerformanceGrade(avgQuality)}`);

        // Conclusion
        console.log('\nüéâ CONCLUSION:');
        console.log('‚îÄ'.repeat(12));
        if (successRate >= 0.8 && avgQuality >= 7.5) {
            console.log('üü¢ PHOTO ENGINE 3.0 - EXCELLENT');
            console.log('‚úÖ Pr√™t pour production clients');
            console.log('üöÄ Recommandation: D√©ploiement imm√©diat');
        } else if (successRate >= 0.6 && avgQuality >= 6.5) {
            console.log('üü° PHOTO ENGINE 3.0 - BON');
            console.log('‚ö° Optimisations mineures n√©cessaires');
            console.log('üîß Recommandation: Tests suppl√©mentaires');
        } else {
            console.log('üî¥ PHOTO ENGINE 3.0 - √Ä AM√âLIORER');
            console.log('üõ†Ô∏è D√©veloppements requis');
            console.log('‚è≥ Recommandation: It√©ration V3.1');
        }

        console.log('\nüìö PROCHAINES √âTAPES:');
        console.log('‚îÄ'.repeat(18));
        console.log('1. üîß Configuration API keys production');
        console.log('2. üß™ Tests A/B conversion impact');
        console.log('3. üìà M√©triques utilisateur temps r√©el');
        console.log('4. üåç Extension secteurs additionnels');
        console.log('5. ü§ñ Machine learning am√©lioration continue');

        console.log('\nüé≠ PHOTO ENGINE 3.0 UNIVERSAL - D√âMO TERMIN√âE');
    }

    /**
     * UTILITAIRES AFFICHAGE
     */
    getColorEmoji(color) {
        const colorEmojis = {
            '#1e40af': 'üîµ', '#3b82f6': 'üîµ', '#2563eb': 'üîµ', // Blues
            '#dc2626': 'üî¥', '#ef4444': 'üî¥', '#f87171': 'üî¥', // Reds
            '#059669': 'üü¢', '#10b981': 'üü¢', '#34d399': 'üü¢', // Greens
            '#f97316': 'üü†', '#fb923c': 'üü†', '#fdba74': 'üü†', // Oranges
            '#8b5cf6': 'üü£', '#a78bfa': 'üü£', '#c4b5fd': 'üü£', // Purples
            '#ec4899': 'ü©∑', '#f472b6': 'ü©∑', '#f9a8d4': 'ü©∑', // Pinks
            '#f59e0b': 'üü°', '#fbbf24': 'üü°', '#fcd34d': 'üü°', // Yellows
            '#14b8a6': 'üîµ', '#20d1c1': 'üîµ', '#2dd4bf': 'üîµ', // Teals
            '#6b7280': '‚ö´', '#9ca3af': '‚ö´', '#d1d5db': '‚ö´', // Grays
            '#92400e': 'üü§', '#b45309': 'üü§', '#d97706': 'üü§'  // Browns
        };
        return colorEmojis[color] || 'üé®';
    }

    getSourceEmoji(source) {
        const sourceEmojis = {
            'unsplash': 'üÖøÔ∏è',   // Premium
            'pexels': 'üÑø',     // Professional  
            'pixabay': 'üÑ±'     // Bulk
        };
        return sourceEmojis[source] || 'üì∏';
    }

    getPerformanceGrade(score) {
        if (score >= 9) return 'A+';
        if (score >= 8) return 'A';
        if (score >= 7) return 'B+';
        if (score >= 6) return 'B';
        if (score >= 5) return 'C';
        return 'D';
    }
}

// LANCEMENT D√âMO AUTOMATIQUE
const demo = new UniversalPhotoEngineDemo();

console.log('üé¨ D√©marrage d√©mo Photo Engine 3.0 Universal...\n');

demo.runUniversalDemo()
    .then(results => {
        console.log('\nüéä D√©mo termin√©e avec succ√®s !');
        console.log('üìã Photo Engine 3.0 Universal valid√©.');
    })
    .catch(error => {
        console.error('‚ùå Erreur pendant la d√©mo:', error);
    });

export { UniversalPhotoEngineDemo };