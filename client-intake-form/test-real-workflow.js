/**
 * TEST REAL WORKFLOW - Script de test du workflow complet
 * Simule un client qui remplit le formulaire et lance la g√©n√©ration r√©elle
 */

const ClientFormProcessor = require('./form-processor.js');
const RealWorkflowConnector = require('./real-workflow-connector.js');

class WorkflowTester {
    constructor() {
        this.processor = new ClientFormProcessor();
        this.connector = new RealWorkflowConnector();
    }

    /**
     * Lance un test complet avec des donn√©es d'exemple
     */
    async testCompleteWorkflow(exampleType = 'salon-beaute') {
        console.log('üß™ D√âMARRAGE TEST WORKFLOW COMPLET');
        console.log('Exemple:', exampleType);
        console.log('='.repeat(50));

        try {
            // 1. Donn√©es client simul√©es (comme si quelqu'un avait rempli le formulaire)
            const mockFormData = this.getMockFormData(exampleType);
            console.log('‚úÖ Donn√©es formulaire pr√©par√©es');

            // 2. Traitement des donn√©es par le FormProcessor
            console.log('\nüìã Traitement des donn√©es client...');
            const clientConfig = this.processor.processClientData(mockFormData);
            console.log('‚úÖ Configuration client g√©n√©r√©e');
            console.log('Projet:', clientConfig.metadata.projectName);
            console.log('Template:', clientConfig.metadata.template);

            // 3. Ex√©cution du workflow r√©el
            console.log('\nüöÄ Lancement du workflow r√©el...');
            const result = await this.connector.executeRealWorkflow(clientConfig);

            // 4. R√©sultat final
            console.log('\n' + '='.repeat(50));
            console.log('üéâ WORKFLOW TERMIN√â AVEC SUCC√àS !');
            console.log('Client:', result.client);
            console.log('Site web:', result.websiteUrl);
            console.log('Projet:', result.projectPath);
            console.log('Dur√©e totale:', this.calculateDuration());
            console.log('='.repeat(50));

            return result;

        } catch (error) {
            console.error('\n‚ùå ERREUR WORKFLOW:', error.message);
            console.error('Stack:', error.stack);
            throw error;
        }
    }

    /**
     * G√©n√®re des donn√©es d'exemple pour diff√©rents secteurs
     */
    getMockFormData(exampleType) {
        const examples = {
            'salon-beaute': {
                businessName: "√âl√©gance Beauty Spa",
                businessSector: "beaute",
                businessPitch: "Salon de beaut√© haut de gamme proposant soins du visage, massages et √©pilation. Expertise et produits de luxe pour une exp√©rience unique de bien-√™tre.",
                businessMission: "R√©v√©ler la beaut√© naturelle de chaque cliente dans un cadre raffin√© et apaisant",
                businessVision: "Devenir la r√©f√©rence beaut√© et bien-√™tre dans le 16√®me arrondissement",
                businessValues: "Excellence, raffinement, bien-√™tre, √©coute client, produits naturels",
                targetAudience: "Femmes 25-55 ans, cadres sup√©rieures, revenus √©lev√©s, soucieuses de leur apparence, recherchant qualit√© et service premium",
                problemSolved: "Manque de temps pour prendre soin de soi, difficult√© √† trouver des soins de qualit√©, besoin de d√©tente et relaxation",
                clientMotivation: ["health", "expertise", "convenience"],
                clientMotivationOther: "Confiance en soi, d√©tente",
                competitors: "Instituts Clarins, Yves Rocher, salons ind√©pendants du quartier",
                uniqueValue: "Seul salon du 16√®me avec cabines priv√©es VIP, produits bio exclusifs, esth√©ticiennes dipl√¥m√©es d'√©tat avec 10+ ans d'exp√©rience",
                brandInspiration: "La Mer (luxe), Chanel (√©l√©gance), Spa Guerlain (raffinement)",
                brandPersonality: ["sophistiquee", "chaleureuse", "professionnelle", "authentique"],
                brandPersonalityOther: "Luxueuse, apaisante",
                toneOfVoice: "expert",
                specificTerms: "soin sur-mesure, beaut√© naturelle, bien-√™tre holistique, expertise beaut√©",
                avoidTerms: "pas cher, discount, rapide, standard",
                preferredColors: ["rose", "or", "blanc"],
                colorDescription: "Palette douce et raffin√©e, tons ros√©s et dor√©s, ambiance feutr√©e et luxueuse",
                avoidColors: "couleurs vives, n√©on, couleurs criardes",
                imageStyle: "sombre",
                fontStyle: "classique",
                hasLogo: "partial",
                features: ["contact", "booking", "gallery", "testimonials"],
                websiteGoal: "leads",
                existingContent: "partial",
                languages: ["fr"],
                email: "contact@elegance-beauty-spa.fr",
                phone: "01 45 67 89 12",
                address: "28 Avenue Foch, 75116 Paris",
                budget: "medium",
                timeline: "2weeks",
                validationProcess: "each"
            },

            'cabinet-dentaire': {
                businessName: "Cabinet Dentaire Dr. Martin",
                businessSector: "sante",
                businessPitch: "Cabinet dentaire moderne sp√©cialis√© dans les soins conservateurs et l'esth√©tique dentaire. Technologies de pointe et approche bienveillante pour tous les √¢ges.",
                businessMission: "Offrir des soins dentaires de qualit√© dans un environnement rassurant et moderne",
                businessVision: "√ätre le cabinet dentaire de r√©f√©rence pour les familles du quartier",
                businessValues: "Professionnalisme, bienveillance, innovation, pr√©vention, √©coute",
                targetAudience: "Familles avec enfants, adultes 25-65 ans, patients anxieux, recherchant qualit√© et modernit√©",
                problemSolved: "Peur du dentiste, difficult√©s √† trouver un cabinet accueillant, besoin de soins esth√©tiques",
                clientMotivation: ["health", "expertise", "convenience"],
                competitors: "Cabinets dentaires du 16√®me, centres dentaires, orthodontistes",
                uniqueValue: "Seul cabinet avec s√©dation consciente pour patients anxieux, plateau technique derni√®re g√©n√©ration, prise en charge globale famille",
                brandPersonality: ["fiable", "professionnelle", "chaleureuse", "moderne"],
                toneOfVoice: "expert",
                specificTerms: "soins dentaires, sant√© bucco-dentaire, esth√©tique dentaire, pr√©vention",
                avoidTerms: "douleur, peur, invasif",
                preferredColors: ["bleu", "blanc", "vert"],
                imageStyle: "lumineux",
                fontStyle: "moderne",
                features: ["contact", "booking", "testimonials"],
                websiteGoal: "leads",
                email: "cabinet@dr-martin-dentaire.fr",
                phone: "01 45 67 89 15",
                address: "15 Rue de Passy, 75116 Paris",
                budget: "medium",
                timeline: "week"
            },

            'agence-immobiliere': {
                businessName: "Prestige Immobilier Paris",
                businessSector: "immobilier",
                businessPitch: "Agence immobili√®re sp√©cialis√©e dans l'immobilier de prestige dans le 16√®me arrondissement. Accompagnement personnalis√© pour achats, ventes et locations haut de gamme.",
                businessMission: "Accompagner nos clients dans leurs projets immobiliers les plus exigeants avec expertise et discr√©tion",
                businessVision: "Devenir la r√©f√©rence de l'immobilier de prestige dans l'ouest parisien",
                businessValues: "Excellence, discr√©tion, expertise, confiance, service sur-mesure",
                targetAudience: "Acqu√©reurs et vendeurs haut de gamme, investisseurs, familles ais√©es, expatri√©s",
                problemSolved: "Difficult√© √† trouver des biens d'exception, manque d'accompagnement personnalis√©, processus complexes",
                clientMotivation: ["expertise", "convenience", "results"],
                competitors: "Daniel F√©au, Barnes, Century 21 Prestige",
                uniqueValue: "R√©seau exclusif de biens off-market, n√©gociateur expert 20+ ans d'exp√©rience, service conciergerie inclus",
                brandPersonality: ["professionnelle", "sophistiquee", "fiable", "expert"],
                toneOfVoice: "expert",
                specificTerms: "immobilier de prestige, biens d'exception, investissement immobilier",
                preferredColors: ["bleu", "gris", "or"],
                imageStyle: "sombre",
                fontStyle: "classique",
                features: ["contact", "gallery", "testimonials", "map"],
                websiteGoal: "leads",
                email: "contact@prestige-immobilier-paris.fr",
                phone: "01 45 67 89 20",
                address: "10 Place Victor Hugo, 75116 Paris",
                budget: "large",
                timeline: "month"
            }
        };

        return examples[exampleType] || examples['salon-beaute'];
    }

    calculateDuration() {
        // Placeholder pour calcul du temps
        return "Calcul en cours...";
    }

    /**
     * Lance plusieurs tests en s√©quence
     */
    async runMultipleTests() {
        const examples = ['salon-beaute', 'cabinet-dentaire', 'agence-immobiliere'];
        const results = [];

        for (const example of examples) {
            console.log(`\nüîÑ Test ${example}...`);
            try {
                const result = await this.testCompleteWorkflow(example);
                results.push({ example, success: true, result });
                console.log(`‚úÖ ${example} r√©ussi`);
            } catch (error) {
                results.push({ example, success: false, error: error.message });
                console.log(`‚ùå ${example} √©chou√©`);
            }
            
            // Pause entre les tests
            await new Promise(resolve => setTimeout(resolve, 2000));
        }

        return results;
    }
}

// Ex√©cution du test si appel√© directement
if (require.main === module) {
    const tester = new WorkflowTester();
    
    // R√©cup√©rer l'argument de type d'exemple
    const exampleType = process.argv[2] || 'salon-beaute';
    
    tester.testCompleteWorkflow(exampleType)
        .then(result => {
            console.log('\nüéØ Test termin√© avec succ√®s');
            process.exit(0);
        })
        .catch(error => {
            console.error('\nüí• Test √©chou√©:', error.message);
            process.exit(1);
        });
}

module.exports = WorkflowTester;